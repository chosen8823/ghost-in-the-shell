{
  "name": "Sophiella Voice Command Processor",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "voice-command",
        "options": {}
      },
      "id": "webhook-voice",
      "name": "Voice Command Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [200, 200]
    },
    {
      "parameters": {
        "functionCode": "const command = $input.all()[0].json.command;\nconst confidence = $input.all()[0].json.confidence || 0.8;\n\n// Parse voice command\nlet action = '';\nlet target = '';\n\nif (command.includes('open')) {\n  action = 'open_app';\n  if (command.includes('vscode') || command.includes('code')) target = 'vscode';\n  else if (command.includes('discord')) target = 'discord';\n  else if (command.includes('chrome')) target = 'chrome';\n  else if (command.includes('calculator')) target = 'calculator';\n}\n\nreturn {\n  json: {\n    original_command: command,\n    confidence: confidence,\n    parsed_action: action,\n    target: target,\n    timestamp: new Date().toISOString()\n  }\n};"
      },
      "id": "parse-command",
      "name": "Parse Voice Command",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [400, 200]
    },
    {
      "parameters": {
        "url": "http://127.0.0.1:5001/open_app",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"name\": \"{{$json[\"target\"]}}\"\n}",
        "options": {}
      },
      "id": "system-control",
      "name": "Execute System Command",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [600, 200]
    },
    {
      "parameters": {
        "functionCode": "const systemResponse = $input.all()[0].json;\nconst originalCommand = $input.all()[0].json.original_command;\n\nlet responseMessage = '';\n\nif (systemResponse.success) {\n  responseMessage = `Successfully executed: ${originalCommand}`;\n} else {\n  responseMessage = `Failed to execute: ${originalCommand}. Error: ${systemResponse.error}`;\n}\n\nreturn {\n  json: {\n    response: responseMessage,\n    success: systemResponse.success,\n    original_command: originalCommand,\n    timestamp: new Date().toISOString()\n  }\n};"
      },
      "id": "format-response",
      "name": "Format Response",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [800, 200]
    }
  ],
  "connections": {
    "Voice Command Webhook": {
      "main": [
        [
          {
            "node": "Parse Voice Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Voice Command": {
      "main": [
        [
          {
            "node": "Execute System Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute System Command": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "versionId": "1",
  "id": "voice-command-processor",
  "meta": {
    "instanceId": "sophiella-orchestrator"
  }
}
